"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[909],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return m}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),c=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=c(e.components);return n.createElement(s.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return t?n.createElement(f,l(l({ref:r},p),{},{components:t})):n.createElement(f,l({ref:r},p))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=u;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2307:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),l=["components"],i={id:"relayer-api",title:"Relayer API",sidebar_position:4},s=void 0,c={unversionedId:"tools/relayer-api",id:"tools/relayer-api",isDocsHomePage:!1,title:"Relayer API",description:"Create Universal Profile",source:"@site/docs/tools/relayer-api.md",sourceDirName:"tools",slug:"/tools/relayer-api",permalink:"/tools/relayer-api",editUrl:"https://github.com/lukso-network/docs/tree/main/docs/tools/relayer-api.md",version:"current",sidebarPosition:4,frontMatter:{id:"relayer-api",title:"Relayer API",sidebar_position:4},sidebar:"toolsSidebar",previous:{title:"Reactive Deployment",permalink:"/tools/lsp-factoryjs/reactive-deployment"},next:{title:"ERC725 Tools",permalink:"/tools/erc725-tools"}},p=[{value:"Create Universal Profile",id:"create-universal-profile",children:[{value:"Payload",id:"payload",children:[]},{value:"Response",id:"response",children:[]}]},{value:"Smart contracts",id:"smart-contracts",children:[]}],d={toc:p};function u(e){var r=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"create-universal-profile"},"Create Universal Profile"),(0,o.kt)("p",null,"To create a ",(0,o.kt)("a",{parentName:"p",href:"/standards/universal-profile"},"Universal Profile")," with a key manager and a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-1-UniversalReceiver.md"},"LSP-1 UniversalReceiver Delegate")," contract:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/badge/-POST-green",alt:"post"})," ",(0,o.kt)("inlineCode",{parentName:"p"},"https://relayer.lukso.network/create-profile")),(0,o.kt)("h3",{id:"payload"},"Payload"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "ownerAddress": "0xAF3Bf2FFb025098B79CADdfBdD113B3681817744",\n    "salt": "0xAd5b8C240097b7c9F8A8151C13F897B1093703C8a6b80bde39837c769f4c1079",\n    "profileJsonUrl": "ipfs://XXXX"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ownerAddress"),": the public key you control. This key will be granted an executor role in the key manager."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"salt"),": some random 32 bytes to determine the address."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"profileJsonUrl"),": (optional) the ",(0,o.kt)("a",{parentName:"li",href:"/standards/universal-profile"},"LSP3Profile")," JSON file, http(s) doesn't work yet.")),(0,o.kt)("h3",{id:"response"},"Response"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "address": "0xb6c076B6D368df8C54ab26b39467c113fBEFFc95",\n    "ownerAddress": "0xAF3Bf2FFb025098B79CADdfBdD113B3681817744",\n    "keyManagerAddress": "0x44dcC53994F1dFBa7c3f6f73E7c4E02B9F1817de",\n    "universalDelegateAddress": "0xBF32C2E62d2C239f8F3ea2d5E03dfAeE11bBab7E"\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"address"),": address of the deployed Universal Profile contract. You can view this profile on ",(0,o.kt)("inlineCode",{parentName:"li"},"https://universalprofile.cloud/{address}"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ownerAddress"),": same as above, the public key you control."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"keyManagerAddress"),": address of the deployed ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/universalprofile-smart-contracts/blob/legacy-contracts/contracts/KeyManager/SimpleKeyManager.sol"},"SimpleKeyManager")," smart contract. This key manager smart contract has ownership on the Universal Profile smart contract."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"universalDelegateAddress"),": address of the deployed ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/lukso-network/universalprofile-smart-contracts/blob/legacy-contracts/contracts/UniversalReceiver/UniversalReceiverAddressStore.sol"},"UniversalReceiverAddressStore")," delegate smart contract.")),(0,o.kt)("h2",{id:"smart-contracts"},"Smart contracts"),(0,o.kt)("p",null,"The source code of the deployed smart contracts is available in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/universalprofile-smart-contracts/tree/legacy-contracts"},"universalprofile-smart-contracts")," repository. The relayer currently deploys the legacy smart contracts. The relayer and this documentation will be updated once the new Universal Profile smart contracts are available."))}u.isMDXComponent=!0}}]);