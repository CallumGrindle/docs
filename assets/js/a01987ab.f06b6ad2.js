"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[2278],{3905:function(e,a,t){t.d(a,{Zo:function(){return d},kt:function(){return m}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),c=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=c(e.components);return n.createElement(l.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||s;return t?n.createElement(f,o(o({ref:a},d),{},{components:t})):n.createElement(f,o({ref:a},d))}));function m(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=p;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8215:function(e,a,t){var n=t(7294);a.Z=function(e){var a=e.children,t=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:t,className:r},a)}},5064:function(e,a,t){t.d(a,{Z:function(){return p}});var n=t(7462),r=t(7294),s=t(2389),o=t(9443);var i=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=t(3039),c=t(6010),d="tabItem_1uMI";function u(e){var a,t,n,s=e.lazy,o=e.block,u=e.defaultValue,p=e.values,m=e.groupId,f=e.className,y=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=p?p:y.map((function(e){var a=e.props;return{value:a.value,label:a.label}})),g=(0,l.lx)(h,(function(e,a){return e.value===a.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===u?u:null!=(a=null!=u?u:null==(t=y.find((function(e){return e.props.default})))?void 0:t.props.value)?a:null==(n=y[0])?void 0:n.props.value;if(null!==b&&!h.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=i(),k=v.tabGroupChoices,w=v.setTabGroupChoices,P=(0,r.useState)(b),S=P[0],A=P[1],N=[],E=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var x=k[m];null!=x&&x!==S&&h.some((function(e){return e.value===x}))&&A(x)}var I=function(e){var a=e.currentTarget,t=N.indexOf(a),n=h[t].value;n!==S&&(E(a),A(n),null!=m&&w(m,n))},M=function(e){var a,t=null;switch(e.key){case"ArrowRight":var n=N.indexOf(e.currentTarget)+1;t=N[n]||N[0];break;case"ArrowLeft":var r=N.indexOf(e.currentTarget)-1;t=N[r]||N[N.length-1]}null==(a=t)||a.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":o},f)},h.map((function(e){var a=e.value,t=e.label;return r.createElement("li",{role:"tab",tabIndex:S===a?0:-1,"aria-selected":S===a,className:(0,c.Z)("tabs__item",d,{"tabs__item--active":S===a}),key:a,ref:function(e){return N.push(e)},onKeyDown:M,onFocus:I,onClick:I},null!=t?t:a)}))),s?(0,r.cloneElement)(y.filter((function(e){return e.props.value===S}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},y.map((function(e,a){return(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==S})}))))}function p(e){var a=(0,s.Z)();return r.createElement(u,(0,n.Z)({key:String(a)},e))}},9443:function(e,a,t){var n=(0,t(7294).createContext)(void 0);a.Z=n},6856:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return c},contentTitle:function(){return d},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var n=t(7462),r=t(3366),s=(t(7294),t(3905)),o=t(5064),i=t(8215),l=["components"],c={sidebar_label:"Add control with a Key Manager",sidebar_position:2.2},d="Add control with a KeyManager",u={unversionedId:"standards/getting-started/add-key-manager",id:"standards/getting-started/add-key-manager",isDocsHomePage:!1,title:"Add control with a KeyManager",description:"In order to interact with the KeyManager, you will need to download its ABI from our npm package",source:"@site/docs/standards/getting-started/02-add-key-manager.md",sourceDirName:"standards/getting-started",slug:"/standards/getting-started/add-key-manager",permalink:"/standards/getting-started/add-key-manager",editUrl:"https://github.com/lukso-network/docs/tree/main/docs/standards/getting-started/02-add-key-manager.md",tags:[],version:"current",sidebarPosition:2.2,frontMatter:{sidebar_label:"Add control with a Key Manager",sidebar_position:2.2},sidebar:"standardsSidebar",previous:{title:"Create a Universal Profile",permalink:"/standards/getting-started/create-universal-profile"},next:{title:"Interact with Universal Receiver",permalink:"/standards/getting-started/interact-universal-receiver"}},p=[{value:"Setting up a Key Manager",id:"setting-up-a-key-manager",children:[],level:2},{value:"Set permissions for other addresses",id:"set-permissions-for-other-addresses",children:[],level:2},{value:"Interact via the Key Manager",id:"interact-via-the-key-manager",children:[{value:"Set data in the key-value store",id:"set-data-in-the-key-value-store",children:[],level:3},{value:"Transfer LYX",id:"transfer-lyx",children:[],level:3},{value:"Interact with other contracts",id:"interact-with-other-contracts",children:[],level:3}],level:2}],m={toc:p};function f(e){var a=e.components,t=(0,r.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"add-control-with-a-keymanager"},"Add control with a KeyManager"),(0,s.kt)("p",null,"In order to interact with the KeyManager, you will need to download its ABI from our npm package"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"import KeyManager from '@lukso/universalprofile-smart-contracts/build/contracts/KeyManager/KeyManager.json';\n")),(0,s.kt)("h2",{id:"setting-up-a-key-manager"},"Setting up a Key Manager"),(0,s.kt)("p",null,"When you create a Universal Profile using ",(0,s.kt)("a",{parentName:"p",href:"/tools/lsp-factoryjs/introduction/getting-started"},"lsp-factory.js"),", a Key Manager is automatically deployed and the ownership of your UP is automatically transferred to it."),(0,s.kt)("p",null,"You can then easily get your KeyManager's address by querying the ",(0,s.kt)("inlineCode",{parentName:"p"},"owner()")," of the UP, and create an instance of the KM from this address."),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"let keyManagerAddress = await myUP.methods.owner().call();\nlet myKeyManager = new web3.eth.Contract(KeyManager.abi, keyManagerAddress);\n"))),(0,s.kt)(i.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"let keyManagerAddress = await myUP.callStatic.owner();\nlet myKeyManager = new ethers.Contract(keyManagerAddress, KeyManager.abi);\n")))),(0,s.kt)("h2",{id:"set-permissions-for-other-addresses"},"Set permissions for other addresses"),(0,s.kt)("p",null,"Below is a list of ERC725Y Permission Keys related to the Key Manager.\nWe will store these values in a file ",(0,s.kt)("inlineCode",{parentName:"p"},"constants.js"),", and reuse them through the next code snippets."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="constants.js"',title:'"constants.js"'},'// keccak256(\'AddressPermissions[]\')\nconst PERMISSIONS_ARRAY =\n  \'0xdf30dba06db6a30e65354d9a64c609861f089545ca58c6b4dbe31a5f338cb0e3\';\n\n// prettier-ignore\nconst ADDRESSES = {\n  PERMISSIONS:      "0x4b80742d0000000082ac0000", // AddressPermissions:Permissions:<address> --\x3e bytes32\n  ALLOWEDADDRESSES: "0x4b80742d00000000c6dd0000", // AddressPermissions:AllowedAddresses:<address> --\x3e address[]\n  ALLOWEDFUNCTIONS: "0x4b80742d000000008efe0000", // AddressPermissions:AllowedFunctions:<address> --\x3e bytes4[]\n}\n\n// prettier-ignore\nconst PERMISSIONS = {\n  CHANGEOWNER:      "0x0000000000000000000000000000000000000000000000000000000000000001", // 0000 0000 0000 0001\n  CHANGEPERMISSIONS:"0x0000000000000000000000000000000000000000000000000000000000000002", // .... .... .... 0010\n  ADDPERMISSIONS:   "0x0000000000000000000000000000000000000000000000000000000000000004", // .... .... .... 0100\n  SETDATA:          "0x0000000000000000000000000000000000000000000000000000000000000008", // .... .... .... 1000\n  CALL:             "0x0000000000000000000000000000000000000000000000000000000000000010", // .... .... 0001 ....\n  STATICCALL:       "0x0000000000000000000000000000000000000000000000000000000000000020", // .... .... 0010 ....\n  DELEGATECALL:     "0x0000000000000000000000000000000000000000000000000000000000000040", // .... .... 0100 ....\n  DEPLOY:           "0x0000000000000000000000000000000000000000000000000000000000000080", // .... .... 1000 ....\n  TRANSFERVALUE:    "0x0000000000000000000000000000000000000000000000000000000000000100", // .... 0001 .... ....\n  SIGN:             "0x0000000000000000000000000000000000000000000000000000000000000200", // .... 0010 .... ....\n}\n\nmodule.exports = {\n  ADDRESSES,\n  PERMISSIONS,\n  PERMISSIONS_ARRAY,\n};\n')),(0,s.kt)("p",null,"The code snippets below show how to set permissions for ",(0,s.kt)("strong",{parentName:"p"},"Bob")," on a Universal Profile owned by ",(0,s.kt)("inlineCode",{parentName:"p"},"yourEOA"),".\nIt assumes that the profile has been deployed with our ",(0,s.kt)("a",{parentName:"p",href:"https://docs.lukso.tech/tools/lsp-factoryjs/introduction/getting-started.md"},"lsp-factory.js")," tool."),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"web3js",label:"web3.js",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"// see file above constants.js\nconst { ADDRESSES, PERMISSIONS, PERMISSIONS_ARRAY } = require('./constants');\n\nconst UniversalProfile = require('@lukso/universalprofile-smart-contracts/build/artifacts/UniversalProfile.json');\nconst KeyManager = require('@lukso/universalprofile-smart-contracts/build/artifacts/KeyManager.json');\n\nconst universalProfile = new web3.eth.Contract(\n  UniversalProfile.abi,\n  '<your-UniversalProfile-address>',\n);\nconst keyManager = new web3.eth.Contract(\n  KeyManager.abi,\n  '<your-KeyManager-Address>',\n);\n\nlet bobAddress = '0xcafecafecafecafecafecafecafecafecafecafe';\nlet bobPermissions = PERMISSIONS.SETDATA;\n\n// give the permission SETDATA to Bob\nasync function setBobPermission() {\n  let payload = await universalProfile.methods\n    .setData(\n      [\n        KEYS.PERMISSIONS + bobAddress.substr(2), // allow Bob to setData on your UP\n        KEYS.PERMISSIONS_ARRAY, // length of AddressPermissions[]\n        KEYS.PERMISSIONS_ARRAY.slice(0, 34) +\n          '00000000000000000000000000000001', // add Bob's address into the list of permissions\n      ],\n      [\n        bobPermissions,\n        3, // 3 because UP owner + Universal Receiver Delegate permission have already been set by lsp-factory\n        bobAddress,\n      ],\n    )\n    .encodeABI();\n\n  keyManager\n    .execute(payload)\n    .send({ from: '<your-eoa-address>', gas: 300_000 });\n}\n\nsetBobPermission();\n"))),(0,s.kt)(i.Z,{value:"etherjs",label:"ether.js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"// see file above constants.js\nconst { ADDRESSES, PERMISSIONS, PERMISSIONS_ARRAY } = require('./constants');\n\nconst UniversalProfile = require('@lukso/universalprofile-smart-contracts/build/artifacts/UniversalProfile.json');\nconst KeyManager = require('@lukso/universalprofile-smart-contracts/build/artifacts/KeyManager.json');\n\nconst universalProfile = new ethers.Contract(\n  '<your-UniversalProfile-address>',\n  UniversalProfile.abi,\n);\nconst keyManager = new ethers.Contract(\n  '<your-KeyManager-Address>',\n  KeyManager.abi,\n);\n\nlet bobAddress = '0xcafecafecafecafecafecafecafecafecafecafe';\nlet bobPermissions = ethers.utils.hexZeroPad(PERMISSIONS.SETDATA, 32);\n\n// give the permission SETDATA to Bob\nasync function setBobPermission() {\n  let payload = universalProfile.interface.encodeFunctionData('setData', [\n    [\n      KEYS.PERMISSIONS + bobAddress.substr(2),\n      KEYS.PERMISSIONS_ARRAY, // length of AddressPermissions[]\n      KEYS.PERMISSIONS_ARRAY.slice(0, 34) + '00000000000000000000000000000001', // add Bob's address into the list of\n    ],\n    [\n      bobPermissions,\n      3, // 3 because UP owner + Universal Receiver Delegate permission have already been set by lsp-factory\n      bobAddress,\n    ],\n  ]);\n\n  await keyManager.connect(yourEOA).execute(payload); // yourEOA should be of type Signer\n}\n\nsetBobPermission();\n")))),(0,s.kt)("h2",{id:"interact-via-the-key-manager"},"Interact via the Key Manager"),(0,s.kt)("p",null,"To interact with a UP that has a Key Manager attached to it, all interactions should be sent to the Key Manager directly. You will need to encode the payload of the function you want to call on the UP, and pass it to the ",(0,s.kt)("inlineCode",{parentName:"p"},"keyManager.execute(_data)")," function."),(0,s.kt)("p",null,"The Key Manager will allow / disallow execution after checking the permissions of the calling address."),(0,s.kt)("p",null,"The examples below are the same as the ones from the ",(0,s.kt)("em",{parentName:"p"},"Create a Universal Profile")," guide, adapted with the Key Manager."),(0,s.kt)("h3",{id:"set-data-in-the-key-value-store"},"Set data in the key-value store"),(0,s.kt)("p",null,"You will need the following permissions, based on the keys you are trying to set."),(0,s.kt)("p",null,"If setting permission keys:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"required permission =")," ",(0,s.kt)("inlineCode",{parentName:"li"},"ADDPERMISSIONS")," if granting some permissions for a new address."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"required permission =")," ",(0,s.kt)("inlineCode",{parentName:"li"},"CHANGEPERMISSIONS")," if changing the permissions of an address that already has some permissions set.")),(0,s.kt)("p",null,"For any other keys:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"required permission =")," ",(0,s.kt)("inlineCode",{parentName:"li"},"SETDATA"))),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const key = web3.utils.keccak256('MyFirstKey');\nconst value = web3.utils.stringToHex('Hello LUKSO!');\n\n// 1. encode the setData payload\nlet abiPayload - await myUp.methods.setData([key], [value]).encodeABI();\n\n// 2. execute via the KeyManager, passing the UP payload\nawait myKeyManager.execute(abiPayload, { from: '<address-of-up-owner>' })\n"))),(0,s.kt)(i.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const key = web3.utils.keccak256('MyFirstKey');\nconst value = web3.utils.stringToHex('Hello LUKSO!');\n\n// 1. encode the setData payload\nlet abiPayload - await myUp.interface.encodeFunctionData(\"setData\", [[key], [value]]);\n\n// 2. execute via the KeyManager, passing the UP payload\nawait myKeyManager.connect(upOwner).execute(abiPayload)\n")))),(0,s.kt)("h3",{id:"transfer-lyx"},"Transfer LYX"),(0,s.kt)("p",null,"You will need the permissions ",(0,s.kt)("inlineCode",{parentName:"p"},"CALL")," + ",(0,s.kt)("inlineCode",{parentName:"p"},"TRANSFERVALUE")," to transfer LYX from a UP."),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const OPERATION_CALL = 0;\nconst recipient = '0xcafecafecafecafecafecafecafecafecafecafe';\nconst amount = web3.utils.toWei('3');\n// payload executed at the target. Here nothing (just a plain LYX transfer)\nconst data = '0x';\n\n// 1. encode the payload to transfer 3 LYX from the UP\nlet abiPayload = await myUp.methods\n  .execute(OPERATION_CALL, recipient, amount, data)\n  .encodeABI();\n\n// 2. execute via the KeyManager, passing the UP payload\nawait myKeyManager.execute(abiPayload, { from: '<address-of-up-owner>' });\n"))),(0,s.kt)(i.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const OPERATION_CALL = 0;\nconst recipient = '0xcafecafecafecafecafecafecafecafecafecafe';\nconst amount = web3.utils.toWei('3');\n// payload executed at the target. Here nothing (just a plain LYX transfer)\nconst data = '0x';\n\n// 1. encode the payload to transfer 3 LYX from the UP\nlet abiPayload = await myUp.interface.encodeFunctionData('execute', [\n  OPERATION_CALL,\n  recipient,\n  amount,\n  data,\n]);\n\n// 2. execute via the KeyManager, passing the UP payload\nawait myKeyManager.connect(upOwner).execute(abiPayload);\n")))),(0,s.kt)("h3",{id:"interact-with-other-contracts"},"Interact with other contracts"),(0,s.kt)("p",null,"You will need the permission ",(0,s.kt)("inlineCode",{parentName:"p"},"CALL")," to interact with an other contract from a UP."),(0,s.kt)(o.Z,{mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"web3js",label:"web3.js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const OPERATION_CALL = 0;\n\n// 1. encode the payload to be run at the targetContract\n// assuming targetContract is a Contract instance\nconst targetPayload = targetContract.methods\n  .myCoolfunction('dummyParameter')\n  .encodeABI();\n\n// 2. encode the payload to be run on the UP,\n// passing the payload to be run at the targetContract as 4th parameter\nlet abiPayload = await myUp.methods\n  .execute(OPERATION_CALL, targetContract.address, 0, targetPayload)\n  .encodeABI();\n\n// 3. execute via the KeyManager, passing the UP payload\nawait myKeyManager.execute(abiPayload, { from: '<address-of-up-owner>' });\n"))),(0,s.kt)(i.Z,{value:"ethersjs",label:"ethers.js",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"const OPERATION_CALL = 0;\n\n// 1. encode the payload to be run at the targetContract\n// assuming targetContract is a Contract instance\nconst targetPayload = targetContract.interface.encodeFunctionData(\n  'myCoolfunction',\n  ['dummyParameter'],\n);\n\n// 2. encode the payload to be run on the UP,\n// passing the payload to be run at the targetContract as 4th parameter\nlet abiPayload = myUp.interface.encodeFunctionData('execute', [\n  OPERATION_CALL,\n  targetContract.address,\n  0,\n  targetPayload,\n]);\n\n// 3. execute via the KeyManager, passing the UP payload\nawait myKeyManager.connect(upOwner).execute(abiPayload);\n")))),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"See the ",(0,s.kt)("a",{parentName:"p",href:"https://docs.soliditylang.org/en/v0.8.10/abi-spec.html#function-selector-and-argument-encoding"},"Solidity docs")," for more infos on function + arguments encoding."))))}f.isMDXComponent=!0}}]);