"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[121],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=r,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9555:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:1.2},s="Constructing LSP3 Metadata",c={unversionedId:"tools/lsp-factoryjs/constructing-lsp3-data",id:"tools/lsp-factoryjs/constructing-lsp3-data",isDocsHomePage:!1,title:"Constructing LSP3 Metadata",description:"When deploying a Universal Profile you can specify your Universal Profile metadata using the lsp3Profile key.",source:"@site/docs/tools/lsp-factoryjs/constructing-lsp3-data.md",sourceDirName:"tools/lsp-factoryjs",slug:"/tools/lsp-factoryjs/constructing-lsp3-data",permalink:"/tools/lsp-factoryjs/constructing-lsp3-data",editUrl:"https://github.com/lukso-network/docs/tree/main/docs/tools/lsp-factoryjs/constructing-lsp3-data.md",version:"current",sidebarPosition:1.2,frontMatter:{sidebar_position:1.2},sidebar:"toolsSidebar",previous:{title:"Getting Started",permalink:"/tools/lsp-factoryjs/getting-started"},next:{title:"Reactive Deployment",permalink:"/tools/lsp-factoryjs/reactive-deployment"}},p=[{value:"Uploading LSP3 metadata to IPFS",id:"uploading-lsp3-metadata-to-ipfs",children:[]}],u={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"constructing-lsp3-metadata"},"Constructing LSP3 Metadata"),(0,o.kt)("p",null,"When deploying a Universal Profile you can specify your Universal Profile metadata using the ",(0,o.kt)("inlineCode",{parentName:"p"},"lsp3Profile")," key."),(0,o.kt)("p",null,"This object contains your UP metadata. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const myUniversalProfileData = {\n    name: "My Universal Profile",\n    description: "My cool Universal Profile",\n    profileImage: [\n        {\n            width: 500,\n            height: 500,\n            hashFunction: "keccak256(bytes)",\n            hash: "0x...", // bytes32 hex string of the image hash\n            url: "ipfs://QmPLqMFHxiUgYAom3Zg4SiwoxDaFcZpHXpCmiDzxrtjSGp",\n        },\n    ],\n    backgroundImage: [\n        {\n            width: 500,\n            height: 500,\n            hashFunction: "keccak256(bytes)",\n            hash: "0x...", // bytes32 hex string of the image hash\n            url: "ipfs://QmPLqMFHxiUgYAom3Zg4SiwoxDaFcZpHXpCmiDzxrtjSGp",\n        },\n    ],\n    tags: [\'Fashion\', \'Design\'],\n    links: [{ title: "My Website", url: "www.my-website.com" }],\n},\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"File")," objects can also be passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"profileImage")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"backgroundImage")," fields to allow easy drag and drop of images from a user interface:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'<input type="file" id="input">\n\n<script>\n    const myLocalFile = document.getElementById(\'input\').files[0];\n\n    const myUniversalProfileData = {\n        name: "My Universal Profile",\n        description: "My cool Universal Profile",\n        profileImage: myLocalFile,\n        backgroundImage: myLocalFile,\n        tags: [\'Fashion\', \'Design\'],\n        links: [{ title: "My Website", url: "www.my-website.com" }],\n    },\n<script/>\n')),(0,o.kt)("p",null,"If a ",(0,o.kt)("inlineCode",{parentName:"p"},"File")," object is passed it will will automatically be uploaded to IPFS."),(0,o.kt)("h2",{id:"uploading-lsp3-metadata-to-ipfs"},"Uploading LSP3 metadata to IPFS"),(0,o.kt)("p",null,"If you wish to upload your LSP3 metadata before deploying you can do so using the static ",(0,o.kt)("inlineCode",{parentName:"p"},"uploadProfileData")," method. This uses the same ",(0,o.kt)("inlineCode",{parentName:"p"},"lsp3Profile")," object schema defined above for ",(0,o.kt)("inlineCode",{parentName:"p"},"myUniversalProfileData"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const uploadResult = await lspFactory.LSP3UniversalProfile.uploadProfileData({\n    ...myUniversalProfileData\n});\n\nconst myUniversalProfileIPFSUrl = uploadResult.url; // 'https://ipfs.lukso.network/ipfs/QmPzUfdKhY6vfcTNDnitwKnnpm5GqjYSmw9todNVmi4bqy'\n")),(0,o.kt)("p",null,"Then deploy your UP  "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const myContracts = await lspFactory.LSP3UniversalProfile.deploy({\n    controllingAccounts: ['0x...'],\n    lsp3Profile: myUniversalProfileIPFSUrl | myUniversalProfileData // LSP3 Metadata object or IPFS URL\n  });\n};\n")))}d.isMDXComponent=!0}}]);