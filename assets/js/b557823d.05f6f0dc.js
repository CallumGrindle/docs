"use strict";(self.webpackChunklukso_docs=self.webpackChunklukso_docs||[]).push([[207],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=r.createContext({}),c=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},p=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||a;return n?r.createElement(m,s(s({ref:e},p),{},{components:n})):r.createElement(m,s({ref:e},p))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i.mdxType="string"==typeof t?t:o,s[1]=i;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5629:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),s=["components"],i={sidebar_position:1.4},l="Deploying Digital Assets",c={unversionedId:"tools/lsp-factoryjs/digital-assets",id:"tools/lsp-factoryjs/digital-assets",isDocsHomePage:!1,title:"Deploying Digital Assets",description:"LSP Factory allows easy deployment of both LSP7 and LSP8 Digital Assets.",source:"@site/docs/tools/lsp-factoryjs/digital-assets.md",sourceDirName:"tools/lsp-factoryjs",slug:"/tools/lsp-factoryjs/digital-assets",permalink:"/tools/lsp-factoryjs/digital-assets",editUrl:"https://github.com/lukso-network/docs/tree/main/docs/tools/lsp-factoryjs/digital-assets.md",tags:[],version:"current",sidebarPosition:1.4,frontMatter:{sidebar_position:1.4},sidebar:"toolsSidebar",previous:{title:"Reactive Deployment",permalink:"/tools/lsp-factoryjs/reactive-deployment"},next:{title:"Execute Transaction",permalink:"/tools/relayer-api/execute-transaction"}},p=[],u={toc:p};function d(t){var e=t.components,n=(0,o.Z)(t,s);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deploying-digital-assets"},"Deploying Digital Assets"),(0,a.kt)("p",null,"LSP Factory allows easy deployment of both LSP7 and LSP8 Digital Assets. "),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-7-DigitalAsset.md"},"LSP7")," is a standard for either fungible or non-fungible tokens based on the ERC20 token standard. "),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-8-IdentifiableDigitalAsset.md"},"LSP8")," is based on the ERC721 token standard. LSP8 digital assets are identifiable, non-fungible tokens which can be uniquely traded and given metadata using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-725.md"},"ERC725Y"),"."),(0,a.kt)("p",null,"To create an LSP7 Digital Asset"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { LSP7 } from \'@lukso/universalprofile-smart-contracts/build/artifacts/LSP7.json\';\n\nconst myDigitalAsset = await lspFactory.DigitalAsset.deployLSP7DigitalAsset({\n    name: "My token",\n    symbol: "TKN",\n    ownerAddress: "0x..", // Account which will own the Token Contract\n    isNFT: true,\n}) \n\nconst myNFT = new web3.eth.Contract(\n    LSP7.abi,\n    myDigitalAsset.LSP7DigitalAsset.address\n);\n\nconst totalSupply = myNFT.methods.totalSupply().call()\n')),(0,a.kt)("p",null,"To create an LSP8 Identifiable Digital Asset"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { LSP8 } from \'@lukso/universalprofile-smart-contracts/build/artifacts/LSP8.json\';\n\nconst myDigitalAsset =\n  lspFactory.DigitalAsset.deployLSP8IdentifiableDigitalAsset({\n    name: "My token",\n    symbol: "TKN",\n    ownerAddress: "0x...", // Account which will own the Token Contract\n  })\n\nconst myNFT = new web3.eth.Contract(\n    LSP8.abi,\n    LSP8Contract.LSP8IdentifiableDigitalAsset.address\n);\n\nconst totalSupply = myNFT.methods.totalSupply().call()\n')))}d.isMDXComponent=!0}}]);